{
  "id": "d230bbfe57498521bdc432063cc8896b",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/CrowdFunding.sol": {
        "content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\n\r\ncontract CrowdFunding {\r\n    // Defines a new type with two fields.\r\n    struct Funder {\r\n        address addr;\r\n        uint256 amount;\r\n    }\r\n\r\n    struct Campaign {\r\n        address payable beneficiary;\r\n        uint256 fundingGoal;\r\n        uint256 numFunders;\r\n        uint256 amount;\r\n        mapping (uint256 => Funder) funders;\r\n    }\r\n\r\n    uint256 public numCampaigns;\r\n    mapping (uint256 => Campaign) public campaigns;\r\n\r\n    function newCampaign(address payable _beneficiary, uint256 _goal) public returns (uint256) {\r\n        uint256 campaignID = ++numCampaigns; // campaignID is return variable\r\n        // Creates new struct and saves in storage. We leave out the mapping type.\r\n        Campaign storage c = campaigns[campaignID]; \r\n        \r\n        c.beneficiary = _beneficiary;\r\n        c.fundingGoal = _goal;\r\n        c.numFunders = 0;\r\n        c.amount = 0;\r\n\r\n        return campaignID;\r\n    }\r\n\r\n    function contribute(uint256 campaignID) public payable {\r\n        Campaign storage c = campaigns[campaignID];\r\n        // Creates a new temporary memory struct, initialised with the given values\r\n        // and copies it over to storage.\r\n        // Note that you can also use Funder(msg.sender, msg.value) to initialise.\r\n        c.funders[c.numFunders++] = Funder({addr: msg.sender, amount: msg.value});\r\n        c.amount += msg.value;\r\n    }\r\n\r\n    function checkGoalReached(uint256 campaignID) public returns (bool reached) {\r\n        Campaign storage c = campaigns[campaignID];\r\n        if (c.amount < c.fundingGoal)\r\n            return false;\r\n        uint256 amount = c.amount;\r\n        c.amount = 0;\r\n        c.beneficiary.transfer(amount);\r\n        return true;\r\n    }\r\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/CrowdFunding.sol": {
        "CrowdFunding": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "campaigns",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "beneficiary",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "fundingGoal",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "numFunders",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "campaignID",
                  "type": "uint256"
                }
              ],
              "name": "checkGoalReached",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "reached",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "campaignID",
                  "type": "uint256"
                }
              ],
              "name": "contribute",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "_beneficiary",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_goal",
                  "type": "uint256"
                }
              ],
              "name": "newCampaign",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "numCampaigns",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506103d6806100206000396000f3fe60806040526004361061005a5760003560e01c80635b2329d4116100435780635b2329d414610101578063c1cbbca714610131578063f7572cf31461014657600080fd5b8063141961bc1461005f5780632c0f7b6f146100dd575b600080fd5b34801561006b57600080fd5b506100ae61007a366004610326565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b039093169290919084565b604080516001600160a01b03909516855260208501939093529183015260608201526080015b60405180910390f35b3480156100e957600080fd5b506100f360005481565b6040519081526020016100d4565b34801561010d57600080fd5b5061012161011c366004610326565b610166565b60405190151581526020016100d4565b61014461013f366004610326565b6101df565b005b34801561015257600080fd5b506100f36101613660046102f0565b610288565b60008181526001602081905260408220908101546003820154101561018e5750600092915050565b600381018054600091829055825460405191926001600160a01b039091169183156108fc0291849190818181858888f193505050501580156101d4573d6000803e3d6000fd5b506001949350505050565b600081815260016020908152604080832081518083019092523382523492820192909252600282018054929391926004850192918261021d83610356565b90915550815260208082019290925260400160009081208351815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116178155929091015160019092019190915560038201805434929061027f90849061033e565b90915550505050565b600080600080815461029990610356565b91829055506000818152600160208190526040822080546001600160a01b03891673ffffffffffffffffffffffffffffffffffffffff19909116178155908101869055600281018290556003015591505092915050565b60008060408385031215610302578182fd5b82356001600160a01b0381168114610318578283fd5b946020939093013593505050565b600060208284031215610337578081fd5b5035919050565b6000821982111561035157610351610371565b500190565b600060001982141561036a5761036a610371565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212201209b455a4e040ac12d4b8ecaf11fa5dd6f9ab2424329ed748a2aaf55b5bcc5864736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B2329D4 GT PUSH2 0x43 JUMPI DUP1 PUSH4 0x5B2329D4 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xC1CBBCA7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xF7572CF3 EQ PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x141961BC EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0x2C0F7B6F EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD LT ISZERO PUSH2 0x18E JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE CALLER DUP3 MSTORE CALLVALUE SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x4 DUP6 ADD SWAP3 SWAP2 DUP3 PUSH2 0x21D DUP4 PUSH2 0x356 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x27F SWAP1 DUP5 SWAP1 PUSH2 0x33E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP2 SLOAD PUSH2 0x299 SWAP1 PUSH2 0x356 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP1 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 ADD SSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x302 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x318 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x337 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x351 JUMPI PUSH2 0x351 PUSH2 0x371 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x36A JUMPI PUSH2 0x36A PUSH2 0x371 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT MULMOD 0xB4 SSTORE LOG4 0xE0 BLOCKHASH 0xAC SLT 0xD4 0xB8 0xEC 0xAF GT STATICCALL 0x5D 0xD6 0xF9 0xAB 0x24 0x24 ORIGIN SWAP15 0xD7 0x48 LOG2 0xAA CREATE2 JUMPDEST JUMPDEST 0xCC PC PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "61:1705:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1913:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "109:310:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "155:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "164:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "172:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "157:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "157:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "157:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "130:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "139:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "126:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "126:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "151:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "122:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "122:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "119:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "190:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "216:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "203:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "203:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "194:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "312:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "321:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "329:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "314:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "314:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "314:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "248:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "259:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "266:42:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "255:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "255:54:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:65:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "238:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "238:73:1"
                              },
                              "nodeType": "YulIf",
                              "src": "235:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "347:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "357:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "347:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "371:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "398:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "409:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "394:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "394:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "381:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "381:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "371:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payablet_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "67:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "78:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "90:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "98:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:405:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "494:120:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "540:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "549:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "557:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "542:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "542:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "542:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "515:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "524:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "511:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "511:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "536:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "507:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "507:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "504:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "575:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "598:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "585:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "585:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "575:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "460:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "471:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "483:6:1",
                            "type": ""
                          }
                        ],
                        "src": "424:190:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "820:255:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "830:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "842:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "853:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "838:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "838:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "830:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "873:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "888:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "896:42:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "884:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "884:55:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "866:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "866:74:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "866:74:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "960:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "971:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "956:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "956:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "976:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "949:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "949:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "949:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1003:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1014:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "999:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "999:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1019:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "992:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "992:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "992:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1046:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1057:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1042:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1042:18:1"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1062:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1035:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1035:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1035:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_address_payable_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "765:9:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "776:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "784:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "792:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "800:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "811:4:1",
                            "type": ""
                          }
                        ],
                        "src": "619:456:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1175:92:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1185:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1197:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1208:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1193:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1193:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1185:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1227:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "1252:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1245:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1245:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1238:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1238:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1220:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1220:41:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1220:41:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1144:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1155:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1166:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1080:187:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1373:76:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1383:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1395:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1406:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1391:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1391:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1383:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1425:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1436:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1418:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1418:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1418:25:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1342:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1353:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1364:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1272:177:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1502:80:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1529:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1531:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1531:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1531:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1518:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "1525:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "1521:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1521:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1515:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1515:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1512:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1560:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1571:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1574:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1567:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1567:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "1560:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "1485:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "1488:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "1494:3:1",
                            "type": ""
                          }
                        ],
                        "src": "1454:128:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1634:88:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1665:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1667:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1667:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1667:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1650:5:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1661:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "1657:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1657:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "1647:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1647:17:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1644:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1696:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1707:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1714:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1703:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1703:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1616:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "1626:3:1",
                            "type": ""
                          }
                        ],
                        "src": "1587:135:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1759:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1776:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1779:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1769:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1769:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1769:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1873:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1876:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1866:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1866:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1866:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1897:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1900:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1890:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1890:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1890:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1727:184:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_address_payable_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361061005a5760003560e01c80635b2329d4116100435780635b2329d414610101578063c1cbbca714610131578063f7572cf31461014657600080fd5b8063141961bc1461005f5780632c0f7b6f146100dd575b600080fd5b34801561006b57600080fd5b506100ae61007a366004610326565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b039093169290919084565b604080516001600160a01b03909516855260208501939093529183015260608201526080015b60405180910390f35b3480156100e957600080fd5b506100f360005481565b6040519081526020016100d4565b34801561010d57600080fd5b5061012161011c366004610326565b610166565b60405190151581526020016100d4565b61014461013f366004610326565b6101df565b005b34801561015257600080fd5b506100f36101613660046102f0565b610288565b60008181526001602081905260408220908101546003820154101561018e5750600092915050565b600381018054600091829055825460405191926001600160a01b039091169183156108fc0291849190818181858888f193505050501580156101d4573d6000803e3d6000fd5b506001949350505050565b600081815260016020908152604080832081518083019092523382523492820192909252600282018054929391926004850192918261021d83610356565b90915550815260208082019290925260400160009081208351815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116178155929091015160019092019190915560038201805434929061027f90849061033e565b90915550505050565b600080600080815461029990610356565b91829055506000818152600160208190526040822080546001600160a01b03891673ffffffffffffffffffffffffffffffffffffffff19909116178155908101869055600281018290556003015591505092915050565b60008060408385031215610302578182fd5b82356001600160a01b0381168114610318578283fd5b946020939093013593505050565b600060208284031215610337578081fd5b5035919050565b6000821982111561035157610351610371565b500190565b600060001982141561036a5761036a610371565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212201209b455a4e040ac12d4b8ecaf11fa5dd6f9ab2424329ed748a2aaf55b5bcc5864736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B2329D4 GT PUSH2 0x43 JUMPI DUP1 PUSH4 0x5B2329D4 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xC1CBBCA7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xF7572CF3 EQ PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x141961BC EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0x2C0F7B6F EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD LT ISZERO PUSH2 0x18E JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE CALLER DUP3 MSTORE CALLVALUE SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x4 DUP6 ADD SWAP3 SWAP2 DUP3 PUSH2 0x21D DUP4 PUSH2 0x356 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x27F SWAP1 DUP5 SWAP1 PUSH2 0x33E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP2 SLOAD PUSH2 0x299 SWAP1 PUSH2 0x356 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP1 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 ADD SSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x302 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x318 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x337 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x351 JUMPI PUSH2 0x351 PUSH2 0x371 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x36A JUMPI PUSH2 0x36A PUSH2 0x371 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT MULMOD 0xB4 SSTORE LOG4 0xE0 BLOCKHASH 0xAC SLT 0xD4 0xB8 0xEC 0xAF GT STATICCALL 0x5D 0xD6 0xF9 0xAB 0x24 0x24 ORIGIN SWAP15 0xD7 0x48 LOG2 0xAA CREATE2 JUMPDEST JUMPDEST 0xCC PC PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "61:1705:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;446:46;;;;;;;;;;-1:-1:-1;446:46:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;446:46:0;;;;;;;;;;;;;-1:-1:-1;;;;;884:55:1;;;866:74;;971:2;956:18;;949:34;;;;999:18;;;992:34;1057:2;1042:18;;1035:34;853:3;838:19;446:46:0;;;;;;;;412:27;;;;;;;;;;;;;;;;;;;1418:25:1;;;1406:2;1391:18;412:27:0;1373:76:1;1438:325:0;;;;;;;;;;-1:-1:-1;1438:325:0;;;;;:::i;:::-;;:::i;:::-;;;1245:14:1;;1238:22;1220:41;;1208:2;1193:18;1438:325:0;1175:92:1;986:444:0;;;;;;:::i;:::-;;:::i;:::-;;501:477;;;;;;;;;;-1:-1:-1;501:477:0;;;;;:::i;:::-;;:::i;1438:325::-;1500:12;1546:21;;;:9;:21;;;;;;;1593:13;;;;1582:8;;;;:24;1578:55;;;-1:-1:-1;1628:5:0;;1438:325;-1:-1:-1;;1438:325:0:o;1578:55::-;1661:8;;;;;1644:14;1680:12;;;;1703:13;;:30;;1661:8;;-1:-1:-1;;;;;1703:13:0;;;;:30;;;;;1661:8;;1703:30;;1644:14;1703:30;1661:8;1703:13;:30;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1751:4:0;;1438:325;-1:-1:-1;;;;1438:325:0:o;986:444::-;1052:18;1073:21;;;:9;:21;;;;;;;;1345:45;;;;;;;;1359:10;1345:45;;1379:9;1345:45;;;;;;;1327:12;;;:14;;1073:21;;1345:45;;1317:9;;;;1052:18;;1327:14;;;:::i;:::-;;;;-1:-1:-1;1317:25:0;;;;;;;;;;;;-1:-1:-1;1317:25:0;;;:73;;;;-1:-1:-1;;1317:73:0;-1:-1:-1;;;;;1317:73:0;;;;;;;;;;;-1:-1:-1;1317:73:0;;;;;;;1401:8;;;:21;;1413:9;;-1:-1:-1;1401:21:0;;1413:9;;1401:21;:::i;:::-;;;;-1:-1:-1;;;;986:444:0:o;501:477::-;583:7;603:18;626:12;;624:14;;;;;:::i;:::-;;;;;-1:-1:-1;766:18:0;787:21;;;:9;:21;;;;;;;830:28;;-1:-1:-1;;;;;830:28:0;;-1:-1:-1;;830:28:0;;;;;;869:13;;;:21;;;901:12;;;:16;;;928:8;;:12;624:14;-1:-1:-1;;501:477:0;;;;:::o;14:405:1:-;90:6;98;151:2;139:9;130:7;126:23;122:32;119:2;;;172:6;164;157:22;119:2;216:9;203:23;-1:-1:-1;;;;;259:5:1;255:54;248:5;245:65;235:2;;329:6;321;314:22;235:2;357:5;409:2;394:18;;;;381:32;;-1:-1:-1;;;109:310:1:o;424:190::-;483:6;536:2;524:9;515:7;511:23;507:32;504:2;;;557:6;549;542:22;504:2;-1:-1:-1;585:23:1;;494:120;-1:-1:-1;494:120:1:o;1454:128::-;1494:3;1525:1;1521:6;1518:1;1515:13;1512:2;;;1531:18;;:::i;:::-;-1:-1:-1;1567:9:1;;1502:80::o;1587:135::-;1626:3;-1:-1:-1;;1647:17:1;;1644:2;;;1667:18;;:::i;:::-;-1:-1:-1;1714:1:1;1703:13;;1634:88::o;1727:184::-;1779:77;1776:1;1769:88;1876:4;1873:1;1866:15;1900:4;1897:1;1890:15"
            },
            "methodIdentifiers": {
              "campaigns(uint256)": "141961bc",
              "checkGoalReached(uint256)": "5b2329d4",
              "contribute(uint256)": "c1cbbca7",
              "newCampaign(address,uint256)": "f7572cf3",
              "numCampaigns()": "2c0f7b6f"
            }
          }
        }
      }
    },
    "sources": {
      "contracts/CrowdFunding.sol": {
        "ast": {
          "absolutePath": "contracts/CrowdFunding.sol",
          "exportedSymbols": {
            "CrowdFunding": [
              155
            ]
          },
          "id": 156,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "34:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 155,
              "linearizedBaseContracts": [
                155
              ],
              "name": "CrowdFunding",
              "nameLocation": "70:12:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "CrowdFunding.Funder",
                  "id": 6,
                  "members": [
                    {
                      "constant": false,
                      "id": 3,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "167:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 6,
                      "src": "159:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "159:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "190:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 6,
                      "src": "182:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "182:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Funder",
                  "nameLocation": "141:6:0",
                  "nodeType": "StructDefinition",
                  "scope": 155,
                  "src": "134:70:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "CrowdFunding.Campaign",
                  "id": 20,
                  "members": [
                    {
                      "constant": false,
                      "id": 8,
                      "mutability": "mutable",
                      "name": "beneficiary",
                      "nameLocation": "255:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 20,
                      "src": "239:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 7,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "239:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10,
                      "mutability": "mutable",
                      "name": "fundingGoal",
                      "nameLocation": "285:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 20,
                      "src": "277:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "277:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 12,
                      "mutability": "mutable",
                      "name": "numFunders",
                      "nameLocation": "315:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 20,
                      "src": "307:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "307:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "344:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 20,
                      "src": "336:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "336:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 19,
                      "mutability": "mutable",
                      "name": "funders",
                      "nameLocation": "389:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 20,
                      "src": "361:35:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Funder_$6_storage_$",
                        "typeString": "mapping(uint256 => struct CrowdFunding.Funder)"
                      },
                      "typeName": {
                        "id": 18,
                        "keyType": {
                          "id": 15,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "370:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "361:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Funder_$6_storage_$",
                          "typeString": "mapping(uint256 => struct CrowdFunding.Funder)"
                        },
                        "valueType": {
                          "id": 17,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 16,
                            "name": "Funder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6,
                            "src": "381:6:0"
                          },
                          "referencedDeclaration": 6,
                          "src": "381:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Funder_$6_storage_ptr",
                            "typeString": "struct CrowdFunding.Funder"
                          }
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Campaign",
                  "nameLocation": "219:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 155,
                  "src": "212:192:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2c0f7b6f",
                  "id": 22,
                  "mutability": "mutable",
                  "name": "numCampaigns",
                  "nameLocation": "427:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "412:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "141961bc",
                  "id": 27,
                  "mutability": "mutable",
                  "name": "campaigns",
                  "nameLocation": "483:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "446:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Campaign_$20_storage_$",
                    "typeString": "mapping(uint256 => struct CrowdFunding.Campaign)"
                  },
                  "typeName": {
                    "id": 26,
                    "keyType": {
                      "id": 23,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "455:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "446:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Campaign_$20_storage_$",
                      "typeString": "mapping(uint256 => struct CrowdFunding.Campaign)"
                    },
                    "valueType": {
                      "id": 25,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 24,
                        "name": "Campaign",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 20,
                        "src": "466:8:0"
                      },
                      "referencedDeclaration": 20,
                      "src": "466:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                        "typeString": "struct CrowdFunding.Campaign"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 74,
                    "nodeType": "Block",
                    "src": "592:386:0",
                    "statements": [
                      {
                        "assignments": [
                          37
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 37,
                            "mutability": "mutable",
                            "name": "campaignID",
                            "nameLocation": "611:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 74,
                            "src": "603:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 36,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "603:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 40,
                        "initialValue": {
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "624:14:0",
                          "subExpression": {
                            "id": 38,
                            "name": "numCampaigns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "626:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "603:35:0"
                      },
                      {
                        "assignments": [
                          43
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 43,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "783:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 74,
                            "src": "766:18:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                              "typeString": "struct CrowdFunding.Campaign"
                            },
                            "typeName": {
                              "id": 42,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 41,
                                "name": "Campaign",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 20,
                                "src": "766:8:0"
                              },
                              "referencedDeclaration": 20,
                              "src": "766:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                "typeString": "struct CrowdFunding.Campaign"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 47,
                        "initialValue": {
                          "baseExpression": {
                            "id": 44,
                            "name": "campaigns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "787:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Campaign_$20_storage_$",
                              "typeString": "mapping(uint256 => struct CrowdFunding.Campaign storage ref)"
                            }
                          },
                          "id": 46,
                          "indexExpression": {
                            "id": 45,
                            "name": "campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "797:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "787:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Campaign_$20_storage",
                            "typeString": "struct CrowdFunding.Campaign storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "766:42:0"
                      },
                      {
                        "expression": {
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 48,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "830:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                "typeString": "struct CrowdFunding.Campaign storage pointer"
                              }
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "beneficiary",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "830:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 51,
                            "name": "_beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "846:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "830:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 53,
                        "nodeType": "ExpressionStatement",
                        "src": "830:28:0"
                      },
                      {
                        "expression": {
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 54,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "869:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                "typeString": "struct CrowdFunding.Campaign storage pointer"
                              }
                            },
                            "id": 56,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "fundingGoal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "869:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 57,
                            "name": "_goal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "885:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "869:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 59,
                        "nodeType": "ExpressionStatement",
                        "src": "869:21:0"
                      },
                      {
                        "expression": {
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 60,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "901:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                "typeString": "struct CrowdFunding.Campaign storage pointer"
                              }
                            },
                            "id": 62,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "numFunders",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "901:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "916:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "901:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 65,
                        "nodeType": "ExpressionStatement",
                        "src": "901:16:0"
                      },
                      {
                        "expression": {
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 66,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "928:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                "typeString": "struct CrowdFunding.Campaign storage pointer"
                              }
                            },
                            "id": 68,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14,
                            "src": "928:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "939:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "928:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 71,
                        "nodeType": "ExpressionStatement",
                        "src": "928:12:0"
                      },
                      {
                        "expression": {
                          "id": 72,
                          "name": "campaignID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "960:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 35,
                        "id": 73,
                        "nodeType": "Return",
                        "src": "953:17:0"
                      }
                    ]
                  },
                  "functionSelector": "f7572cf3",
                  "id": 75,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "newCampaign",
                  "nameLocation": "510:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "_beneficiary",
                        "nameLocation": "538:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 75,
                        "src": "522:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "522:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 31,
                        "mutability": "mutable",
                        "name": "_goal",
                        "nameLocation": "560:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 75,
                        "src": "552:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 30,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "552:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "521:45:0"
                  },
                  "returnParameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 75,
                        "src": "583:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "583:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "582:9:0"
                  },
                  "scope": 155,
                  "src": "501:477:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 109,
                    "nodeType": "Block",
                    "src": "1041:389:0",
                    "statements": [
                      {
                        "assignments": [
                          82
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 82,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "1069:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 109,
                            "src": "1052:18:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                              "typeString": "struct CrowdFunding.Campaign"
                            },
                            "typeName": {
                              "id": 81,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80,
                                "name": "Campaign",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 20,
                                "src": "1052:8:0"
                              },
                              "referencedDeclaration": 20,
                              "src": "1052:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                "typeString": "struct CrowdFunding.Campaign"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 86,
                        "initialValue": {
                          "baseExpression": {
                            "id": 83,
                            "name": "campaigns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1073:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Campaign_$20_storage_$",
                              "typeString": "mapping(uint256 => struct CrowdFunding.Campaign storage ref)"
                            }
                          },
                          "id": 85,
                          "indexExpression": {
                            "id": 84,
                            "name": "campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "1083:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1073:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Campaign_$20_storage",
                            "typeString": "struct CrowdFunding.Campaign storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1052:42:0"
                      },
                      {
                        "expression": {
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 87,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "1317:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                  "typeString": "struct CrowdFunding.Campaign storage pointer"
                                }
                              },
                              "id": 92,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "funders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19,
                              "src": "1317:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Funder_$6_storage_$",
                                "typeString": "mapping(uint256 => struct CrowdFunding.Funder storage ref)"
                              }
                            },
                            "id": 93,
                            "indexExpression": {
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "1327:14:0",
                              "subExpression": {
                                "expression": {
                                  "id": 89,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82,
                                  "src": "1327:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                    "typeString": "struct CrowdFunding.Campaign storage pointer"
                                  }
                                },
                                "id": 90,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "numFunders",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12,
                                "src": "1327:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1317:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Funder_$6_storage",
                              "typeString": "struct CrowdFunding.Funder storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 95,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1359:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 96,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1359:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 97,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1379:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 98,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1379:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 94,
                              "name": "Funder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "1345:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Funder_$6_storage_ptr_$",
                                "typeString": "type(struct CrowdFunding.Funder storage pointer)"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "addr",
                              "amount"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "1345:45:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Funder_$6_memory_ptr",
                              "typeString": "struct CrowdFunding.Funder memory"
                            }
                          },
                          "src": "1317:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Funder_$6_storage",
                            "typeString": "struct CrowdFunding.Funder storage ref"
                          }
                        },
                        "id": 101,
                        "nodeType": "ExpressionStatement",
                        "src": "1317:73:0"
                      },
                      {
                        "expression": {
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 102,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82,
                              "src": "1401:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                "typeString": "struct CrowdFunding.Campaign storage pointer"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14,
                            "src": "1401:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 105,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1413:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1413:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1401:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 108,
                        "nodeType": "ExpressionStatement",
                        "src": "1401:21:0"
                      }
                    ]
                  },
                  "functionSelector": "c1cbbca7",
                  "id": 110,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "contribute",
                  "nameLocation": "995:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 78,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 77,
                        "mutability": "mutable",
                        "name": "campaignID",
                        "nameLocation": "1014:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 110,
                        "src": "1006:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1006:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1005:20:0"
                  },
                  "returnParameters": {
                    "id": 79,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1041:0:0"
                  },
                  "scope": 155,
                  "src": "986:444:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 153,
                    "nodeType": "Block",
                    "src": "1514:249:0",
                    "statements": [
                      {
                        "assignments": [
                          119
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 119,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "1542:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 153,
                            "src": "1525:18:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                              "typeString": "struct CrowdFunding.Campaign"
                            },
                            "typeName": {
                              "id": 118,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 117,
                                "name": "Campaign",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 20,
                                "src": "1525:8:0"
                              },
                              "referencedDeclaration": 20,
                              "src": "1525:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                "typeString": "struct CrowdFunding.Campaign"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 123,
                        "initialValue": {
                          "baseExpression": {
                            "id": 120,
                            "name": "campaigns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1546:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Campaign_$20_storage_$",
                              "typeString": "mapping(uint256 => struct CrowdFunding.Campaign storage ref)"
                            }
                          },
                          "id": 122,
                          "indexExpression": {
                            "id": 121,
                            "name": "campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 112,
                            "src": "1556:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1546:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Campaign_$20_storage",
                            "typeString": "struct CrowdFunding.Campaign storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1525:42:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 124,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "1582:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                "typeString": "struct CrowdFunding.Campaign storage pointer"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14,
                            "src": "1582:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 126,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "1593:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                "typeString": "struct CrowdFunding.Campaign storage pointer"
                              }
                            },
                            "id": 127,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fundingGoal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "1593:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1582:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 131,
                        "nodeType": "IfStatement",
                        "src": "1578:55:0",
                        "trueBody": {
                          "expression": {
                            "hexValue": "66616c7365",
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1628:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 116,
                          "id": 130,
                          "nodeType": "Return",
                          "src": "1621:12:0"
                        }
                      },
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "1652:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 153,
                            "src": "1644:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1644:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 136,
                        "initialValue": {
                          "expression": {
                            "id": 134,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "1661:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                              "typeString": "struct CrowdFunding.Campaign storage pointer"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "1661:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1644:25:0"
                      },
                      {
                        "expression": {
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 137,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "1680:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                "typeString": "struct CrowdFunding.Campaign storage pointer"
                              }
                            },
                            "id": 139,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14,
                            "src": "1680:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1691:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1680:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 142,
                        "nodeType": "ExpressionStatement",
                        "src": "1680:12:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 148,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "1726:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 143,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 119,
                                "src": "1703:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Campaign_$20_storage_ptr",
                                  "typeString": "struct CrowdFunding.Campaign storage pointer"
                                }
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "beneficiary",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8,
                              "src": "1703:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1703:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1703:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 150,
                        "nodeType": "ExpressionStatement",
                        "src": "1703:30:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1751:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 116,
                        "id": 152,
                        "nodeType": "Return",
                        "src": "1744:11:0"
                      }
                    ]
                  },
                  "functionSelector": "5b2329d4",
                  "id": 154,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkGoalReached",
                  "nameLocation": "1447:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 112,
                        "mutability": "mutable",
                        "name": "campaignID",
                        "nameLocation": "1472:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "1464:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1464:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1463:20:0"
                  },
                  "returnParameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 115,
                        "mutability": "mutable",
                        "name": "reached",
                        "nameLocation": "1505:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "1500:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 114,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1500:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1499:14:0"
                  },
                  "scope": 155,
                  "src": "1438:325:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 156,
              "src": "61:1705:0",
              "usedErrors": []
            }
          ],
          "src": "34:1732:0"
        },
        "id": 0
      }
    }
  }
}
